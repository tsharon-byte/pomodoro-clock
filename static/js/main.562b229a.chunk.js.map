{"version":3,"sources":["App.js","index.js"],"names":["timeToString","value","defaultState","breakLength","sessionLength","timerHasBeenStarted","minutes","seconds","isSession","App","props","state","handleReset","bind","handleBreakDecrement","handleBreakIncrement","handleSessionDecrement","handleSessionIncrement","handleStartStop","tick","event","document","getElementById","pause","currentTime","this","clearInterval","timerID","setState","console","log","play","setInterval","timeLeft","className","id","src","onClick","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.562b229a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction timeToString(value) {\n    return value < 10 ? \"0\" + value : value;\n}\n\nconst defaultState = {\n    breakLength: 5,\n    sessionLength: 25,\n    timerHasBeenStarted: false,\n    minutes: 25,\n    seconds: 0,\n    isSession: true\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = defaultState;\n        this.handleReset = this.handleReset.bind(this);\n        this.handleBreakDecrement = this.handleBreakDecrement.bind(this);\n        this.handleBreakIncrement = this.handleBreakIncrement.bind(this);\n        this.handleSessionDecrement = this.handleSessionDecrement.bind(this);\n        this.handleSessionIncrement = this.handleSessionIncrement.bind(this);\n        this.handleStartStop = this.handleStartStop.bind(this);\n        this.tick = this.tick.bind(this);\n    }\n\n    handleReset(event) {\n        document.getElementById(\"beep\").pause();\n        document.getElementById(\"beep\").currentTime = 0;\n        if (this.state.timerHasBeenStarted) {\n            clearInterval(this.timerID);\n        }\n        this.setState(defaultState);\n    }\n\n    handleBreakDecrement(event) {\n        if (this.state.breakLength === 1) {\n            return;\n        }\n        this.setState({\n            breakLength: this.state.breakLength - 1\n        });\n    }\n\n    handleBreakIncrement(event) {\n        if (this.state.breakLength === 60) {\n            return;\n        }\n        this.setState({\n            breakLength: this.state.breakLength + 1\n        });\n    }\n\n    handleSessionDecrement(event) {\n        if (this.state.sessionLength === 1) {\n            return;\n        }\n        this.setState({\n            sessionLength: this.state.sessionLength - 1\n        });\n    }\n\n    handleSessionIncrement(event) {\n        if (this.state.sessionLength === 60) {\n            return;\n        }\n        this.setState({\n            sessionLength: this.state.sessionLength + 1\n        });\n    }\n\n    tick() {\n        console.log(\"tick is called!\");\n        let seconds = this.state.seconds;\n        let minutes = this.state.minutes;\n        let isSession = this.state.isSession;\n        if (this.state.seconds === 0) {\n            if (this.state.minutes > 0) {\n                seconds = 59;\n                minutes--;\n            } else {\n                document.getElementById(\"beep\").play();\n                if (this.state.isSession) {\n                    //alert(\"сделайте перерыв!\");\n                    isSession = false;\n                    minutes = this.state.breakLength;\n                } else {\n                    //alert(\"отдохнули? за работу!\");\n                    isSession = true;\n                    minutes = this.state.sessionLength;\n                }\n            }\n        } else {\n            seconds = this.state.seconds - 1;\n        }\n        this.setState(\n            {\n                minutes: minutes,\n                seconds: seconds,\n                isSession: isSession\n            });\n    }\n\n    handleStartStop(event) {\n        console.log(this.state.timerHasBeenStarted);\n        if (this.state.timerHasBeenStarted) {\n            clearInterval(this.timerID);\n            this.setState({\n                timerHasBeenStarted: false\n            });\n        } else {\n            let minutes = this.state.isSession ? this.state.sessionLength : this.state.breakLength;\n            this.setState({\n                minutes: minutes\n            });\n            this.timerID = setInterval(\n                this.tick,\n                1000);\n            this.setState({\n                timerHasBeenStarted: true\n            });\n        }\n    }\n\n    render() {\n        let timeLeft = timeToString(this.state.minutes) + ':' + timeToString(this.state.seconds);\n        return (\n            <div className=\"container\">\n                <audio id=\"beep\" src=\"https://goo.gl/65cBl1\"/>\n                <h1>Pomodoro clock</h1>\n                <div className=\"length-container\">\n                    <div className=\"length-item\">\n                        <div id=\"break-label\">Break Length</div>\n                        <div className=\"length\">\n                            <button id=\"break-decrement\" onClick={this.handleBreakDecrement}><i\n                                className=\"fas fa-arrow-down\"></i></button>\n                            <div id=\"break-length\">{this.state.breakLength}</div>\n                            <button id=\"break-increment\" onClick={this.handleBreakIncrement}><i\n                                className=\"fas fa-arrow-up\"></i></button>\n                        </div>\n                    </div>\n                    <div className=\"length-item\">\n                        <div id=\"session-label\">Session Length</div>\n                        <div className=\"length\">\n                            <button id=\"session-decrement\" onClick={this.handleSessionDecrement}><i\n                                className=\"fas fa-arrow-down\"></i></button>\n                            <div id=\"session-length\">{this.state.sessionLength}</div>\n                            <button id=\"session-increment\" onClick={this.handleSessionIncrement}><i\n                                className=\"fas fa-arrow-up\"></i></button>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"clock\">\n                    <div id=\"timer-label\">{this.state.isSession ? \"Session\" : \"Break\"}</div>\n                    <div id=\"time-left\">{timeLeft}</div>\n                </div>\n                <button id=\"start_stop\" onClick={this.handleStartStop}>start_stop</button>\n                <button id=\"reset\" onClick={this.handleReset}><i className=\"fas fa-sync-alt\"></i></button>\n            </div>);\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}